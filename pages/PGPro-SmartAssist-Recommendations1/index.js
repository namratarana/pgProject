import React, { useState, useEffect }  from "react"
import Head from "next/head"
import Result from "../../components/Result"
import EmailResults from "../../components/EmailResults";
import EmailResults1 from "../../components/EmailResults1";
// import EmailResultsSmall from "../../components/EmailResults-small";

import ProductCards1 from '../../components/ProductCards1';
import ProductCards1small from '../../components/ProductCards1small';

// import ProductCards2 from '../../components/ProductCards2';

import Claims from '../../components/Claims';
import SDSModal from '../../components/SDSModal';
import Header2 from "../../components/header2"
import { connect } from "react-redux";
import { setModalFlag } from "../../action/RecommendationAction";
import {useRouter} from 'next/router';

import {setAnswersChosen, setProductResult, setSubAnswerChosen} from '../../action/nextPageAction'
import { yellow } from "@material-ui/core/colors";

export async function getStaticProps(context) {

    return {
        props: {
            // productData: [],
            Product: "",
            DescriptionData: "",
            SizeData: "",
            BulletProductDescriptionData:"",
            productResult: [],
            answersChosen: [],
            subAnswerChosen: '',
        }, // will be passed to the page component as props
    }
}
 const businessSizeMapping = value => {
    switch (value) {
      case "1-4":
        return "Small";
      case "5-9":
        return "Medium";
      case "10-14":
        return "Large";
      case "15-19":
        return "Large";
      case "20+":
        return "Large";
      case "Less than 5":
        return "Small";
      case "5-10":
        return "Medium";
      case "10+":
        return "Large";
    };
  };

  const handleReset = () => {
    setProductResult([])
    setAnswersChosen([])
    setSubAnswerChosen('')
  };

const Recommendations = (props) => {

    let Router = useRouter();
    //let productData = [...new Set(props.productResult)] ? [...new Set(props.productResult)] : []
    const [productData, setProductData] = useState();
    const [answersChosen, setanswersChosen] = useState()
    
    console.log("########",props.answersChosen);
    console.log("*****************", productData);
    let uniqueProductImages = productData
        ? productData.filter(
            (v, i, a) =>
                a.findIndex(
                    (t) =>
                        t.Product === v.Product &&
                        t.DescriptionData === v.DescriptionData &&
                        t.SizeData === v.SizeData
                ) === i
        )
        : []

    const [modalProductdata, setModalProductData] = useState({})
    const [cardWidth, setcardWidth] = useState()
    let coreData = uniqueProductImages.filter(x => x.Core == "Core")
    let nonCoreData = uniqueProductImages.filter(x => x.Core != "Core")
    

    React.useEffect(() => 
    {
        let RecommendedProducts = localStorage.getItem('recommendedResults');
        let answerChosen = localStorage.getItem('answerChosen');
        
        if(!RecommendedProducts)
        {
            Router.push('/')
        }
        else
        {
            // localStorage.setItem('recommendedResults', productData);
        
            setProductData(JSON.parse(RecommendedProducts));
            setanswersChosen(JSON.parse(answerChosen));
            console.log("Recommended Products: ",productData);
        }
        // if(window.innerWidth<768)
        // {
        //     setcardWidth()
        // }
        const buttonRight = document.getElementById('slideRight');
        const buttonLeft = document.getElementById('slideLeft');

        buttonRight.onclick = function() {
            document.getElementById('scrollItems').scrollLeft += 220;
        };
        buttonLeft.onclick = function(){
            document.getElementById('scrollItems').scrollLeft -= 220;
        };

        const buttonRight1 = document.getElementById('slideRight1');
        const buttonLeft1 = document.getElementById('slideLeft1');

        buttonRight1.onclick = function() {
            document.getElementById('scrollItems1').scrollLeft += 220;
        };
        buttonLeft1.onclick = function(){
            document.getElementById('scrollItems1').scrollLeft -= 220;
        };
    },[]);

    
    return (
            <div>
                <Header2 />
                
                <div className="container-fluid ">
                    <div className="row mt-5">
                {/* Leftcard */}
                        {answersChosen?
                            <div className="col col-lg-6 offset-lg-1 col-12">
                            <div class="card card1 align-items-center">
                                <div class="card-body cardBody1">
                                    <h5 class="card-title cardTitle1">Your Business Profile</h5>
                                    
                                    {/* <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6> */}
                                    <p class="card-text">
    
                                        <div className="d-flex card-lists">
                                            <span>
                                            <svg width="25" height="30" viewBox="0 0 27 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M7.59946 27.0001H0.386525C0.284012 27.0001 0.185698 26.9615 0.11321 26.8929C0.040723 26.8243 0 26.7313 0 26.6343V7.96399C0 7.867 0.040723 7.77397 0.11321 7.70539C0.185698 7.6368 0.284012 7.59827 0.386525 7.59827H7.59946C7.70198 7.59827 7.80029 7.6368 7.87278 7.70539C7.94526 7.77397 7.98599 7.867 7.98599 7.96399V26.6343C7.98599 26.7313 7.94526 26.8243 7.87278 26.8929C7.80029 26.9615 7.70198 27.0001 7.59946 27.0001ZM0.773049 26.2686H7.21294V8.32972H0.773049V26.2686Z" fill="#231F20"/>
                                                <path d="M26.6134 27H19.4004C19.2979 27 19.1996 26.9614 19.1271 26.8927C19.0546 26.824 19.0139 26.7308 19.0139 26.6337V13.2905C19.0139 13.1933 19.0546 13.1002 19.1271 13.0315C19.1996 12.9628 19.2979 12.9242 19.4004 12.9242H26.6134C26.7159 12.9242 26.8142 12.9628 26.8867 13.0315C26.9592 13.1002 26.9999 13.1933 26.9999 13.2905V26.6337C26.9999 26.7308 26.9592 26.824 26.8867 26.8927C26.8142 26.9614 26.7159 27 26.6134 27ZM19.787 26.2674H26.2269V13.6568H19.787V26.2674Z" fill="#231F20"/>
                                                <path d="M19.412 26.9898H7.58794C7.48572 26.9898 7.38768 26.9491 7.3154 26.8768C7.24312 26.8045 7.20251 26.7065 7.20251 26.6042V0.385568C7.20251 0.283309 7.24312 0.185238 7.3154 0.11293C7.38768 0.0406222 7.48572 0 7.58794 0H19.412C19.5142 0 19.6122 0.0406222 19.6845 0.11293C19.7568 0.185238 19.7974 0.283309 19.7974 0.385568V26.6042C19.7974 26.7065 19.7568 26.8045 19.6845 26.8768C19.6122 26.9491 19.5142 26.9898 19.412 26.9898ZM7.97336 26.2186H19.0266V0.771136H7.97336V26.2186Z" fill="#231F20"/>
                                                <path d="M16.4866 26.9899H10.5125C10.4103 26.9899 10.3122 26.9493 10.24 26.877C10.1677 26.8047 10.1271 26.7066 10.1271 26.6043V17.4884C10.1271 17.3861 10.1677 17.288 10.24 17.2157C10.3122 17.1434 10.4103 17.1028 10.5125 17.1028H16.4866C16.5888 17.1028 16.6868 17.1434 16.7591 17.2157C16.8314 17.288 16.872 17.3861 16.872 17.4884V26.6043C16.872 26.7066 16.8314 26.8047 16.7591 26.877C16.6868 26.9493 16.5888 26.9899 16.4866 26.9899ZM10.8979 26.2188H16.1011V17.8739H10.8979V26.2188Z" fill="#231F20"/>
                                                <path d="M5.2137 13.3248H2.77165C2.66943 13.3248 2.5714 13.2841 2.49912 13.2118C2.42684 13.1395 2.38623 13.0415 2.38623 12.9392V10.497C2.38623 10.3948 2.42684 10.2967 2.49912 10.2244C2.5714 10.1521 2.66943 10.1115 2.77165 10.1115H5.2137C5.31592 10.1115 5.41396 10.1521 5.48624 10.2244C5.55852 10.2967 5.59912 10.3948 5.59912 10.497V12.9392C5.59912 13.0415 5.55852 13.1395 5.48624 13.2118C5.41396 13.2841 5.31592 13.3248 5.2137 13.3248ZM3.15823 12.5536H4.82828V10.8826H3.15708L3.15823 12.5536Z" fill="#231F20"/>
                                                <path d="M5.2137 18.3692H2.77165C2.66943 18.3692 2.5714 18.3286 2.49912 18.2563C2.42684 18.1839 2.38623 18.0859 2.38623 17.9836V15.5418C2.38623 15.4396 2.42684 15.3415 2.49912 15.2692C2.5714 15.1969 2.66943 15.1562 2.77165 15.1562H5.2137C5.31592 15.1562 5.41396 15.1969 5.48624 15.2692C5.55852 15.3415 5.59912 15.4396 5.59912 15.5418V17.9836C5.59912 18.0859 5.55852 18.1839 5.48624 18.2563C5.41396 18.3286 5.31592 18.3692 5.2137 18.3692ZM3.15823 17.598H4.82828V15.9274H3.15708L3.15823 17.598Z" fill="#231F20"/>
                                                <path d="M24.2292 18.3692H21.7872C21.6849 18.3692 21.5869 18.3286 21.5146 18.2563C21.4423 18.1839 21.4017 18.0859 21.4017 17.9836V15.5418C21.4017 15.4396 21.4423 15.3415 21.5146 15.2692C21.5869 15.1969 21.6849 15.1562 21.7872 15.1562H24.228C24.3303 15.1562 24.4283 15.1969 24.5006 15.2692C24.5729 15.3415 24.6135 15.4396 24.6135 15.5418V17.9836C24.6135 18.0857 24.573 18.1836 24.501 18.2558C24.429 18.3281 24.3312 18.3689 24.2292 18.3692ZM22.1737 17.598H23.8438V15.9274H22.1726L22.1737 17.598Z" fill="#231F20"/>
                                                <path d="M12.1895 5.38677H9.74785C9.64563 5.38677 9.5476 5.34615 9.47532 5.27384C9.40303 5.20153 9.36243 5.10346 9.36243 5.0012V2.5594C9.36243 2.45714 9.40303 2.35907 9.47532 2.28676C9.5476 2.21445 9.64563 2.17383 9.74785 2.17383H12.1895C12.2917 2.17383 12.3898 2.21445 12.462 2.28676C12.5343 2.35907 12.5749 2.45714 12.5749 2.5594V5.0012C12.5749 5.10346 12.5343 5.20153 12.462 5.27384C12.3898 5.34615 12.2917 5.38677 12.1895 5.38677ZM10.134 4.61563H11.8041V2.94496H10.1333L10.134 4.61563Z" fill="#231F20"/>
                                                <path d="M12.1895 10.4315H9.74785C9.64563 10.4315 9.5476 10.3908 9.47532 10.3185C9.40303 10.2462 9.36243 10.1482 9.36243 10.0459V7.60371C9.36243 7.50145 9.40303 7.40338 9.47532 7.33107C9.5476 7.25876 9.64563 7.21814 9.74785 7.21814H12.1895C12.2917 7.21814 12.3898 7.25876 12.462 7.33107C12.5343 7.40338 12.5749 7.50145 12.5749 7.60371V10.0459C12.5749 10.1482 12.5343 10.2462 12.462 10.3185C12.3898 10.3908 12.2917 10.4315 12.1895 10.4315ZM10.134 9.66033H11.8041V7.98928H10.1333L10.134 9.66033Z" fill="#231F20"/>
                                                <path d="M12.1895 15.4759H9.74785C9.64563 15.4759 9.5476 15.4353 9.47532 15.3629C9.40303 15.2906 9.36243 15.1926 9.36243 15.0903V12.6485C9.36243 12.5462 9.40303 12.4482 9.47532 12.3759C9.5476 12.3036 9.64563 12.2629 9.74785 12.2629H12.1895C12.2917 12.2629 12.3898 12.3036 12.462 12.3759C12.5343 12.4482 12.5749 12.5462 12.5749 12.6485V15.0903C12.5749 15.1926 12.5343 15.2906 12.462 15.3629C12.3898 15.4353 12.2917 15.4759 12.1895 15.4759ZM10.134 14.7047H11.8041V13.0341H10.1333L10.134 14.7047Z" fill="#00AAE7"/>
                                                <path d="M17.252 5.38677H14.8104C14.7081 5.38677 14.6101 5.34615 14.5378 5.27384C14.4655 5.20153 14.4249 5.10346 14.4249 5.0012V2.5594C14.4249 2.45714 14.4655 2.35907 14.5378 2.28676C14.6101 2.21445 14.7081 2.17383 14.8104 2.17383H17.2512C17.3535 2.17383 17.4515 2.21445 17.5238 2.28676C17.5961 2.35907 17.6367 2.45714 17.6367 2.5594V5.0012C17.6367 5.10333 17.5962 5.20128 17.524 5.27357C17.4519 5.34585 17.3541 5.38656 17.252 5.38677ZM15.1965 4.61563H16.8666V2.94496H15.1958L15.1965 4.61563Z" fill="#231F20"/>
                                                <path d="M17.252 10.4315H14.8104C14.7081 10.4315 14.6101 10.3908 14.5378 10.3185C14.4655 10.2462 14.4249 10.1482 14.4249 10.0459V7.60371C14.4249 7.50145 14.4655 7.40338 14.5378 7.33107C14.6101 7.25876 14.7081 7.21814 14.8104 7.21814H17.2512C17.3535 7.21814 17.4515 7.25876 17.5238 7.33107C17.5961 7.40338 17.6367 7.50145 17.6367 7.60371V10.0459C17.6367 10.148 17.5962 10.246 17.524 10.3183C17.4519 10.3905 17.3541 10.4313 17.252 10.4315ZM15.1965 9.66033H16.8666V7.98928H15.1958L15.1965 9.66033Z" fill="#00AAE7"/>
                                                <path d="M17.252 15.4759H14.8104C14.7081 15.4759 14.6101 15.4353 14.5378 15.3629C14.4655 15.2906 14.4249 15.1926 14.4249 15.0903V12.6485C14.4249 12.5462 14.4655 12.4482 14.5378 12.3759C14.6101 12.3036 14.7081 12.2629 14.8104 12.2629H17.2512C17.3535 12.2629 17.4515 12.3036 17.5238 12.3759C17.5961 12.4482 17.6367 12.5462 17.6367 12.6485V15.0903C17.6367 15.1924 17.5962 15.2904 17.524 15.3627C17.4519 15.435 17.3541 15.4757 17.252 15.4759ZM15.1965 14.7047H16.8666V13.0341H15.1958L15.1965 14.7047Z" fill="#231F20"/>
                                                </svg>
                                            </span>
                                            <span >
                                                <li  className ="ms-4">
                                                    <span className="card1Lists">You are a {answersChosen[1]=='5-9'?"medium sized business": "small sized business"} in the {answersChosen[0]} industry.</span>
                                                </li> 
                                            </span>
                                        </div>
                                        <div className="d-flex card-lists">
                                            <svg width="25" height="30" viewBox="0 0 26 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M8.54615 15.6461H4.71979C4.45322 15.6458 4.19763 15.5413 4.00913 15.3555C3.82063 15.1697 3.71462 14.9178 3.71436 14.655V10.8833C3.71462 10.6205 3.82063 10.3686 4.00913 10.1828C4.19763 9.99697 4.45322 9.89247 4.71979 9.89221H8.54615C8.81264 9.8926 9.0681 9.99716 9.25649 10.183C9.44488 10.3687 9.55083 10.6206 9.55109 10.8833V14.655C9.55083 14.9177 9.44488 15.1695 9.25649 15.3553C9.0681 15.5411 8.81264 15.6457 8.54615 15.6461ZM4.71979 10.8774L4.7138 10.8833V14.655L8.54615 14.6609L8.55165 10.8833L4.71979 10.8774Z" fill="#231F20"/>
                                                <path d="M8.54615 23.4924H4.71979C4.45326 23.4923 4.19768 23.3879 4.00916 23.2021C3.82065 23.0164 3.71462 22.7645 3.71436 22.5017V18.7292C3.71462 18.4664 3.82065 18.2145 4.00916 18.0288C4.19768 17.8431 4.45326 17.7387 4.71979 17.7385H8.54615C8.8126 17.7388 9.06805 17.8432 9.25646 18.029C9.44486 18.2147 9.55083 18.4665 9.55109 18.7292V22.5017C9.55083 22.7644 9.44486 23.0162 9.25646 23.2019C9.06805 23.3877 8.8126 23.4921 8.54615 23.4924ZM4.71979 18.7238L4.7138 18.7292V22.5017L8.54615 22.5071L8.55165 18.7292L4.71979 18.7238Z" fill="#00AAE7"/>
                                                <path d="M8.54615 30.8154H4.71979C4.45322 30.8151 4.19763 30.7201 4.00913 30.5512C3.82063 30.3823 3.71462 30.1533 3.71436 29.9144V26.4856C3.71462 26.2467 3.82063 26.0177 4.00913 25.8487C4.19763 25.6798 4.45322 25.5848 4.71979 25.5846H8.54615C8.81264 25.585 9.0681 25.68 9.25649 25.8489C9.44488 26.0178 9.55083 26.2468 9.55109 26.4856V29.9144C9.55083 30.1532 9.44488 30.3822 9.25649 30.5511C9.0681 30.72 8.81264 30.815 8.54615 30.8154ZM4.71979 26.4802L4.7138 26.4856V29.9144L8.54615 29.9198L8.55165 26.4856L4.71979 26.4802Z" fill="#00AAE7"/>
                                                <path d="M20.7745 27.1539H12.6561C12.5365 27.1539 12.4218 27.0988 12.3372 27.0007C12.2526 26.9026 12.2051 26.7696 12.2051 26.6309C12.2051 26.4921 12.2526 26.3591 12.3372 26.261C12.4218 26.1629 12.5365 26.1078 12.6561 26.1078H20.7745C20.8941 26.1078 21.0088 26.1629 21.0934 26.261C21.178 26.3591 21.2255 26.4921 21.2255 26.6309C21.2255 26.7696 21.178 26.9026 21.0934 27.0007C21.0088 27.0988 20.8941 27.1539 20.7745 27.1539Z" fill="#231F20"/>
                                                <path d="M18.6585 30.0836H12.7429C12.6002 30.0836 12.4634 30.0278 12.3626 29.9283C12.2617 29.8289 12.2051 29.6941 12.2051 29.5535C12.2051 29.4129 12.2617 29.278 12.3626 29.1786C12.4634 29.0792 12.6002 29.0233 12.7429 29.0233H18.6585C18.8011 29.0233 18.9379 29.0792 19.0387 29.1786C19.1396 29.278 19.1963 29.4129 19.1963 29.5535C19.1963 29.6941 19.1396 29.8289 19.0387 29.9283C18.9379 30.0278 18.8011 30.0836 18.6585 30.0836Z" fill="#231F20"/>
                                                <path d="M20.7745 19.8308H12.6561C12.5365 19.8308 12.4218 19.7757 12.3372 19.6776C12.2526 19.5795 12.2051 19.4465 12.2051 19.3077C12.2051 19.169 12.2526 19.036 12.3372 18.9379C12.4218 18.8398 12.5365 18.7847 12.6561 18.7847H20.7745C20.8941 18.7847 21.0088 18.8398 21.0934 18.9379C21.178 19.036 21.2255 19.169 21.2255 19.3077C21.2255 19.4465 21.178 19.5795 21.0934 19.6776C21.0088 19.7757 20.8941 19.8308 20.7745 19.8308Z" fill="#231F20"/>
                                                <path d="M18.6585 22.7605H12.7429C12.6002 22.7605 12.4634 22.7046 12.3626 22.6052C12.2617 22.5058 12.2051 22.3709 12.2051 22.2303C12.2051 22.0897 12.2617 21.9549 12.3626 21.8555C12.4634 21.756 12.6002 21.7002 12.7429 21.7002H18.6585C18.8011 21.7002 18.9379 21.756 19.0387 21.8555C19.1396 21.9549 19.1963 22.0897 19.1963 22.2303C19.1963 22.3709 19.1396 22.5058 19.0387 22.6052C18.9379 22.7046 18.8011 22.7605 18.6585 22.7605Z" fill="#231F20"/>
                                                <path d="M20.7745 11.9846H12.6561C12.5365 11.9846 12.4218 11.9295 12.3372 11.8314C12.2526 11.7333 12.2051 11.6003 12.2051 11.4616C12.2051 11.3228 12.2526 11.1898 12.3372 11.0917C12.4218 10.9936 12.5365 10.9385 12.6561 10.9385H20.7745C20.8941 10.9385 21.0088 10.9936 21.0934 11.0917C21.178 11.1898 21.2255 11.3228 21.2255 11.4616C21.2255 11.6003 21.178 11.7333 21.0934 11.8314C21.0088 11.9295 20.8941 11.9846 20.7745 11.9846Z" fill="#231F20"/>
                                                <path d="M18.6585 14.9144H12.7429C12.6002 14.9144 12.4634 14.8586 12.3626 14.7591C12.2617 14.6597 12.2051 14.5249 12.2051 14.3843C12.2051 14.2437 12.2617 14.1088 12.3626 14.0094C12.4634 13.91 12.6002 13.8541 12.7429 13.8541H18.6585C18.8011 13.8541 18.9379 13.91 19.0387 14.0094C19.1396 14.1088 19.1963 14.2437 19.1963 14.3843C19.1963 14.5249 19.1396 14.6597 19.0387 14.7591C18.9379 14.8586 18.8011 14.9144 18.6585 14.9144Z" fill="#231F20"/>
                                                <rect x="0.5" y="4.11536" width="25" height="30.3847" rx="1.5" stroke="#231F20"/>
                                                <path d="M12.7351 1C11.2494 1 10.5242 2.04616 10.3474 2.56923H5.83716V6.23078H19.6331V2.56923H14.8576C14.7691 2.04616 14.2208 1 12.7351 1Z" fill="white" stroke="#231F20" stroke-linejoin="round"/>
                                            </svg>

                                            <span>
                                                <li  className ="ms-4">
                                                    <span className="card1Lists">There are several important needs when buying products.</span>
                                                </li> 
                                            </span>
                                        </div>
                                        <div className="d-flex card-lists">
                                            <span>
                                                <svg width="25" height="30" viewBox="0 0 27 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M24.517 14.0375V13.5C24.517 12.0413 23.9475 10.6424 22.9337 9.61091C21.9199 8.57946 20.5449 8 19.1113 8C17.6776 8 16.3026 8.57946 15.2888 9.61091C14.275 10.6424 13.7055 12.0413 13.7055 13.5V15.5H11.7398C11.6095 15.5 11.4845 15.5527 11.3923 15.6464C11.3001 15.7402 11.2484 15.8674 11.2484 16V18C11.2484 18.1326 11.3001 18.2598 11.3923 18.3536C11.4845 18.4473 11.6095 18.5 11.7398 18.5H11.7889L12.2543 23H10.2655V1.5C10.2655 1.10218 10.1102 0.720644 9.83369 0.43934C9.5572 0.158035 9.18221 0 8.7912 0C8.4002 0 8.02521 0.158035 7.74872 0.43934C7.47224 0.720644 7.31691 1.10218 7.31691 1.5V23H2.4026C2.14202 23.0003 1.89221 23.1058 1.70795 23.2932C1.5237 23.4807 1.42005 23.7349 1.41974 24V25.4384L0.451558 29.3787C0.433448 29.4525 0.432089 29.5294 0.447582 29.6037C0.463076 29.6781 0.495015 29.7478 0.540974 29.8077C0.586932 29.8676 0.645701 29.916 0.712817 29.9494C0.779932 29.9827 0.853629 30 0.928308 30H24.0256C24.1559 30 24.2809 29.9473 24.3731 29.8536C24.4652 29.7598 24.517 29.6326 24.517 29.5V27.5263L25.2107 20.8218C25.3058 20.2561 25.4435 20.4243 25.581 20.1867C25.7184 19.949 25.9928 19.7475 25.9913 19.4718V15.875C25.9908 15.4429 25.6923 15.1881 25.4237 14.8533C25.1551 14.5186 24.8772 14.3467 24.517 14.0375ZM14.6884 13.5C14.6884 12.9091 14.8028 12.3239 15.025 11.7779C15.2473 11.232 15.5731 10.7359 15.9838 10.318C16.3945 9.90016 16.8821 9.56869 17.4187 9.34254C17.9553 9.1164 18.5304 9 19.1113 9C19.6921 9 20.2672 9.1164 20.8038 9.34254C21.3404 9.56869 21.828 9.90016 22.2387 10.318C22.6494 10.7359 22.9752 11.232 23.1975 11.7779C23.4197 12.3239 23.5341 12.9091 23.5341 13.5V14H18.9884C18.5637 14.0005 18.1522 14.15 17.8232 14.4232C17.4942 14.6965 17.2679 15.0768 17.1824 15.5H14.6884V13.5ZM12.2312 16.5H17.1455V17.5H12.2312V16.5ZM12.7771 18.5H17.1455L17.338 19.4718C17.3389 19.6758 17.5355 19.7852 17.6132 19.9733C17.691 20.1615 17.6801 20.2567 17.8229 20.4C17.9598 20.5391 17.9916 20.543 18.1709 20.6171C18.3502 20.6911 18.4341 20.6197 18.6276 20.6171C18.9824 20.6106 19.2906 20.4 19.6027 20.6171C19.8727 20.8636 20.2227 20.9999 20.5856 20.9999C20.9484 20.9999 21.1174 20.6465 21.3874 20.4C21.6574 20.6464 22.1882 20.9998 22.5509 20.9999C22.9136 21 23.4238 20.6463 23.6939 20.4C23.8845 20.5743 23.9566 20.7678 24.2074 20.8218L23.5833 27H16.5464L16.1627 25.4384V24C16.1624 23.7349 16.0587 23.4807 15.8745 23.2932C15.6902 23.1058 15.4404 23.0003 15.1798 23H13.2425L12.7771 18.5ZM8.29977 1.5C8.29977 1.36739 8.35155 1.24021 8.44371 1.14645C8.53587 1.05268 8.66087 1 8.7912 1C8.92154 1 9.04654 1.05268 9.1387 1.14645C9.23086 1.24021 9.28264 1.36739 9.28264 1.5V23H8.29977V1.5ZM2.4026 24H15.1798V25H2.4026V24ZM3.52343 29L4.26058 26H5.21322L4.47607 29H3.52343ZM2.29485 26H3.24749L2.51035 29H1.55771L2.29485 26ZM6.2263 26H7.25167L6.8831 29H5.48916L6.2263 26ZM7.87358 29L8.24215 26H9.34026L9.70883 29H7.87358ZM10.6993 29L10.3307 26H11.3561L12.0933 29H10.6993ZM13.1063 29L12.3692 26H13.3218L14.059 29H13.1063ZM15.0721 29L14.3349 26H15.2876L16.0247 29H15.0721ZM23.5341 29H17.0378L16.7921 28H23.5341V29ZM25.4237 19.6806C25.426 19.8124 24.9638 19.7312 24.8772 19.8291C24.7905 19.9271 24.6706 19.9879 24.5416 19.9994C24.475 20.0028 24.4085 19.9924 24.3461 19.9688C24.2836 19.9452 24.2557 20.1133 24.2074 20.0666C24.1591 20.0199 23.9298 20.0356 23.9035 19.9733C23.5976 20.2762 23.7594 19.6533 23.7594 19.5856V17.5H23.1435V19.4718C23.1435 19.6044 23.3667 19.875 23.2745 19.9688C23.1823 20.0626 22.7758 20.2561 22.6455 20.2561C22.5151 20.2561 21.9645 20.1604 21.8723 20.0666C21.7801 19.9728 21.715 19.6326 21.715 19.5V17.5H21.077V19.5C21.077 19.6326 21.1691 19.7354 21.077 19.8291C20.9848 19.9229 20.8887 20.1867 20.7584 20.1867C20.628 20.1867 20.0118 20.4938 19.9197 20.4C19.8275 20.3062 19.8148 19.6052 19.8148 19.4726V17.5H19.1113V19.5C19.1114 19.6313 19.0607 19.7574 18.9702 19.8509C18.8797 19.9445 18.7566 19.9981 18.6276 20H18.6208C18.4957 19.9987 18.3761 19.947 18.2884 19.8563C18.2382 19.8061 18.1983 19.7465 18.1709 19.6806C18.1435 19.6148 17.8234 19.5433 17.8229 19.4718V15.7067C17.8231 15.4747 18.1271 14.8535 18.2884 14.6895C18.4496 14.5254 18.7422 14.6897 18.9702 14.6895L24.1132 14.64C24.3412 14.6402 24.7159 14.9693 24.8772 15.1333C25.0384 15.2974 25.371 15.643 25.3713 15.875L25.4237 19.6806Z" fill="#231F20"/>
                                                <path d="M21.8064 14.4268H23.8276C24.1554 14.4268 24.489 14.4683 24.7665 14.6427C25.1606 14.8905 25.5806 15.3163 25.5806 15.9201C25.5806 16.6675 25.5806 18.2331 25.5806 19.1836C25.5806 19.4249 25.5563 19.6727 25.4116 19.8657C25.2152 20.1278 24.8804 20.4001 24.5322 20.4001V20.4001C23.7865 20.4001 23.4838 19.5556 23.4838 18.8099V17.4134" stroke="#00AAE7"/>
                                                <path d="M23.6927 19.76C23.6228 19.9733 22.9378 20.6133 22.4346 20.6133C21.9314 20.6133 21.526 20.3289 21.3862 20.1867V17.4133" stroke="#00AAE7"/>
                                                <path d="M21.3866 19.9733C21.3089 20.1867 21.0138 20.6133 20.4547 20.6133C19.8956 20.6133 19.6548 20.3289 19.4995 20.1867V17.4133" stroke="#00AAE7"/>
                                                <path d="M19.4999 19.7601C19.4323 19.9808 19.1482 20.4001 18.6612 20.4001C18.6296 20.4001 18.5982 20.398 18.5672 20.3941C17.821 20.2997 17.6128 19.3427 17.6128 18.5905V15.767C17.6128 15.585 17.6234 15.4008 17.6911 15.2319C17.8377 14.8665 18.1622 14.4268 18.6612 14.4268C19.3105 14.4268 22.4151 14.4268 23.9031 14.4268" stroke="#00AAE7"/>
                                                <path d="M1.52908 15.4441C1.55414 15.5205 1.6022 15.587 1.66645 15.6341C1.73071 15.6812 1.8079 15.7066 1.88709 15.7066C1.96629 15.7066 2.04348 15.6812 2.10774 15.6341C2.17199 15.587 2.22005 15.5205 2.24511 15.4441C2.34443 15.1433 2.51086 14.87 2.73137 14.6457C2.95187 14.4213 3.22046 14.252 3.51606 14.1509C3.59122 14.1254 3.6566 14.0765 3.70293 14.0111C3.74926 13.9458 3.77419 13.8672 3.77419 13.7866C3.77419 13.706 3.74926 13.6274 3.70293 13.562C3.6566 13.4966 3.59122 13.4477 3.51606 13.4222C3.22046 13.3212 2.95187 13.1519 2.73137 12.9275C2.51086 12.7031 2.34443 12.4299 2.24511 12.1291C2.22005 12.0526 2.17199 11.9862 2.10774 11.939C2.04348 11.8919 1.96629 11.8666 1.88709 11.8666C1.8079 11.8666 1.73071 11.8919 1.66645 11.939C1.6022 11.9862 1.55414 12.0526 1.52908 12.1291C1.42976 12.4299 1.26333 12.7031 1.04282 12.9275C0.822315 13.1519 0.553734 13.3212 0.258133 13.4222C0.182969 13.4477 0.11759 13.4966 0.0712607 13.562C0.024931 13.6274 0 13.706 0 13.7866C0 13.8672 0.024931 13.9458 0.0712607 14.0111C0.11759 14.0765 0.182969 14.1254 0.258133 14.1509C0.553734 14.252 0.822315 14.4213 1.04282 14.6457C1.26333 14.87 1.42976 15.1433 1.52908 15.4441ZM1.88709 13.0938C2.07291 13.3631 2.30328 13.5975 2.56793 13.7866C2.30328 13.9757 2.07291 14.2101 1.88709 14.4794C1.70128 14.2101 1.47091 13.9757 1.20626 13.7866C1.47091 13.5975 1.70128 13.3631 1.88709 13.0938Z" fill="#231F20"/>
                                                <path d="M25.7134 5.91517C25.3849 5.80289 25.0865 5.61474 24.8415 5.36545C24.5965 5.11616 24.4116 4.81252 24.3012 4.47832C24.2734 4.39338 24.22 4.31951 24.1486 4.26716C24.0772 4.21481 23.9914 4.18665 23.9034 4.18665C23.8154 4.18665 23.7296 4.21481 23.6583 4.26716C23.5869 4.31951 23.5335 4.39338 23.5056 4.47832C23.3953 4.81252 23.2103 5.11616 22.9653 5.36545C22.7203 5.61474 22.4219 5.80289 22.0935 5.91517C22.0099 5.94347 21.9373 5.9978 21.8858 6.07046C21.8343 6.14311 21.8066 6.23041 21.8066 6.31998C21.8066 6.40955 21.8343 6.49684 21.8858 6.5695C21.9373 6.64215 22.0099 6.69649 22.0935 6.72479C22.4219 6.83707 22.7203 7.02522 22.9653 7.27451C23.2103 7.5238 23.3953 7.82744 23.5056 8.16163C23.5335 8.24657 23.5869 8.32045 23.6583 8.3728C23.7296 8.42514 23.8154 8.45331 23.9034 8.45331C23.9914 8.45331 24.0772 8.42514 24.1486 8.3728C24.22 8.32045 24.2734 8.24657 24.3012 8.16163C24.4116 7.82744 24.5965 7.5238 24.8415 7.27451C25.0865 7.02522 25.3849 6.83707 25.7134 6.72479C25.7969 6.69649 25.8695 6.64215 25.921 6.5695C25.9725 6.49684 26.0002 6.40955 26.0002 6.31998C26.0002 6.23041 25.9725 6.14311 25.921 6.07046C25.8695 5.9978 25.7969 5.94347 25.7134 5.91517ZM23.9034 7.08976C23.6969 6.79054 23.441 6.53008 23.1469 6.31998C23.441 6.10988 23.6969 5.84941 23.9034 5.5502C24.1099 5.84941 24.3658 6.10988 24.6599 6.31998C24.3658 6.53008 24.1099 6.79054 23.9034 7.08976Z" fill="#231F20"/>
                                                <path d="M4.19345 20.8266C4.28146 20.8266 4.36723 20.7984 4.43863 20.7461C4.51002 20.6937 4.56341 20.6198 4.59124 20.5349C4.7016 20.2007 4.88653 19.897 5.13153 19.6478C5.37654 19.3985 5.67496 19.2103 6.00341 19.098C6.08693 19.0697 6.15957 19.0154 6.21105 18.9428C6.26252 18.8701 6.29022 18.7828 6.29022 18.6932C6.29022 18.6037 6.26252 18.5164 6.21105 18.4437C6.15957 18.3711 6.08693 18.3167 6.00341 18.2884C5.67496 18.1762 5.37654 17.988 5.13153 17.7387C4.88653 17.4894 4.7016 17.1858 4.59124 16.8516C4.5634 16.7667 4.51 16.6928 4.43861 16.6405C4.36722 16.5881 4.28145 16.5599 4.19345 16.5599C4.10545 16.5599 4.01969 16.5881 3.94829 16.6405C3.8769 16.6928 3.8235 16.7667 3.79566 16.8516C3.68531 17.1858 3.50038 17.4894 3.25537 17.7387C3.01036 17.988 2.71194 18.1762 2.38349 18.2884C2.29998 18.3167 2.22734 18.3711 2.17586 18.4437C2.12438 18.5164 2.09668 18.6037 2.09668 18.6932C2.09668 18.7828 2.12438 18.8701 2.17586 18.9428C2.22734 19.0154 2.29998 19.0697 2.38349 19.098C2.71194 19.2103 3.01036 19.3985 3.25537 19.6478C3.50038 19.897 3.68531 20.2007 3.79566 20.5349C3.82349 20.6198 3.87689 20.6937 3.94828 20.7461C4.01967 20.7984 4.10545 20.8266 4.19345 20.8266ZM4.19345 17.9235C4.39992 18.2227 4.65588 18.4831 4.94993 18.6932C4.65588 18.9033 4.39992 19.1638 4.19345 19.463C3.98699 19.1638 3.73103 18.9033 3.43697 18.6932C3.73103 18.4831 3.98699 18.2227 4.19345 17.9235Z" fill="#231F20"/>
                                            </svg>
                                            </span>
                                            <span>
                                                <li  className ="ms-4">
                                                    <span className="card1Lists">{answersChosen[3]}</span>
                                                </li> 
                                            </span>
                                        </div>
                                        <div className="d-flex card-lists">
                                            <span>
                                            <svg width="25" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M8.84443 17.1725C8.11271 17.5554 7.60716 18.3623 7.60716 19.2937C7.60716 20.3206 8.22282 21.1956 9.07865 21.5174V22.5988C9.07865 23.9228 10.0807 25 11.3123 25H14.307C15.5396 25 16.5426 23.9228 16.5426 22.5988V21.5174C17.3984 21.1956 18.0141 20.3206 18.0141 19.2937C18.0141 18.3622 17.5085 17.5553 16.7767 17.1725C17.0727 15.9914 17.6728 15.1119 18.3038 14.1894C19.2746 12.7704 20.375 11.1619 20.3726 8.32877C20.3726 8.07583 20.3629 7.8162 20.3437 7.55709C20.3141 7.15734 19.9891 6.86003 19.6162 6.89089C19.2943 6.9184 19.043 7.18393 19.0003 7.5139C18.9936 7.56533 18.992 7.61833 18.996 7.67223C19.0124 7.89316 19.0207 8.11402 19.0207 8.32936C19.0226 10.6863 18.1443 11.9703 17.2143 13.3296C16.5087 14.3611 15.7825 15.4243 15.4365 16.9356H10.1844C9.83842 15.4245 9.11204 14.3613 8.40628 13.3299C7.47602 11.9706 6.59741 10.6866 6.60032 8.32957C6.6033 5.8163 7.60581 4.22907 8.44636 3.34013C9.60373 2.11605 11.1891 1.42807 12.8009 1.45247C12.8074 1.45254 12.8139 1.45254 12.8203 1.45247C14.1337 1.43105 15.4508 1.89084 16.5261 2.74472C16.8436 2.97393 17.2496 2.9149 17.4715 2.59254C17.6544 2.3268 17.6435 1.97125 17.466 1.721C17.4281 1.66762 17.3826 1.61903 17.3298 1.57713C16.0206 0.537608 14.416 -0.0216475 12.8105 0.000641416C10.8442 -0.0251324 8.90885 0.813496 7.49792 2.30576C6.02921 3.85916 5.25138 5.94161 5.24854 8.3279C5.24503 11.1622 6.34589 12.7709 7.31711 14.1901C7.94825 15.1124 8.54843 15.9917 8.84443 17.1725ZM15.1907 22.5988C15.1907 23.1222 14.7943 23.548 14.307 23.548H11.3123C10.8261 23.548 10.4306 23.1222 10.4306 22.5988V21.6497H15.1907V22.5988ZM9.80253 18.3877H15.8187C16.2838 18.3877 16.6622 18.7942 16.6622 19.2937C16.6622 19.7921 16.2839 20.1976 15.8187 20.1976H9.80253C9.33747 20.1976 8.95907 19.7921 8.95907 19.2937C8.95907 18.7942 9.33747 18.3877 9.80253 18.3877Z" fill="#231F20"/>
                                                <path d="M19.6162 6.89089C19.9891 6.86003 20.3141 7.15734 20.3437 7.55709C20.3061 5.53217 18.6895 2.74472 17.466 1.721C17.6435 1.97125 17.6544 2.3268 17.4715 2.59254C17.2496 2.9149 16.8436 2.97393 16.5261 2.74472C17.3661 3.61408 18.6895 4.95656 19.0003 7.5139C19.043 7.18393 19.2943 6.9184 19.6162 6.89089Z" fill="#231F20"/>
                                                <path d="M25.324 8.26666H22.5784C22.2051 8.26666 21.9025 8.5917 21.9025 8.99269C21.9025 9.39367 22.2051 9.71871 22.5784 9.71871H25.324C25.6974 9.71871 26 9.39367 26 8.99269C26 8.5917 25.6974 8.26666 25.324 8.26666Z" fill="#231F20"/>
                                                <path d="M21.4429 3.59005C21.5725 3.59005 21.7034 3.55012 21.819 3.46677L24.0971 1.82451C24.4071 1.60104 24.4897 1.15003 24.2816 0.817076C24.0736 0.484195 23.6537 0.395402 23.3437 0.618872L21.0656 2.26114C20.7556 2.48461 20.673 2.93568 20.881 3.26856C21.0115 3.4773 21.2252 3.59005 21.4429 3.59005Z" fill="#231F20"/>
                                                <path d="M24.0976 16.1609L21.8194 14.5187C21.5095 14.2952 21.0895 14.384 20.8815 14.7169C20.6734 15.0497 20.7561 15.5008 21.066 15.7243L23.3441 17.3665C23.4597 17.4499 23.5907 17.4898 23.7202 17.4898C23.9379 17.4898 24.1516 17.3771 24.2821 17.1683C24.4901 16.8354 24.4075 16.3843 24.0976 16.1609Z" fill="#231F20"/>
                                                <path d="M0.675957 9.71871H3.41966C3.793 9.71871 4.09562 9.39367 4.09562 8.99269C4.09562 8.5917 3.793 8.26666 3.41966 8.26666H0.675957C0.302626 8.26666 0 8.5917 0 8.99269C0 9.39367 0.302626 9.71871 0.675957 9.71871Z" fill="#231F20"/>
                                                <path d="M1.90186 1.82451L4.17997 3.46677C4.29556 3.55012 4.42649 3.59005 4.556 3.59005C4.77373 3.59005 4.98747 3.4773 5.11793 3.26856C5.32599 2.93568 5.24332 2.4846 4.93339 2.26114L2.65528 0.618872C2.34529 0.395402 1.92538 0.484195 1.71732 0.817076C1.50926 1.14996 1.59186 1.60104 1.90186 1.82451Z" fill="#231F20"/>
                                                <path d="M4.18094 14.5184L1.90284 16.1607C1.59284 16.3841 1.51024 16.8352 1.7183 17.1681C1.84876 17.3768 2.06243 17.4896 2.28022 17.4896C2.40973 17.4896 2.54067 17.4497 2.65626 17.3663L4.93436 15.724C5.24436 15.5006 5.32696 15.0495 5.1189 14.7166C4.91084 14.3837 4.49087 14.2949 4.18094 14.5184Z" fill="#231F20"/>
                                                <path d="M12.9211 14.8697C13.4309 14.8697 13.8441 14.4259 13.8441 13.8784C13.8441 13.3309 13.4309 12.8871 12.9211 12.8871C12.4114 12.8871 11.9982 13.3309 11.9982 13.8784C11.9982 14.4259 12.4114 14.8697 12.9211 14.8697Z" fill="#00AAE7"/>
                                                <path d="M12.9213 4.46088C11.3946 4.46088 10.1525 5.81616 10.1525 7.48202C10.1525 7.89916 10.4624 8.2373 10.8447 8.2373C11.227 8.2373 11.5369 7.89916 11.5369 7.48202C11.5369 6.64909 12.1579 5.97145 12.9213 5.97145C13.6847 5.97145 14.3057 6.64909 14.3057 7.48202C14.3057 8.31494 13.6847 8.99259 12.9213 8.99259C12.539 8.99259 12.2291 9.33073 12.2291 9.74787V11.6361C12.2291 12.0532 12.539 12.3914 12.9213 12.3914C13.3036 12.3914 13.6135 12.0532 13.6135 11.6361V10.4076C14.8064 10.0714 15.6902 8.88719 15.6902 7.48202C15.6902 5.81616 14.4481 4.46088 12.9213 4.46088Z" fill="#00AAE7"/>
                                            </svg>

                                            </span>
                                            <span>
                                                <li  className ="ms-4">
                                                <span className="card1Lists">A key challenge you encounter is{answersChosen[5]}</span>
                                                </li> 
                                            </span>
                                        </div>
                                    </p>   
                                </div>
                            </div>
                        </div>
                        :   null}
                        <hr className="card1line d-lg-none d-block"/>
                {/* Rightcard */}
                        <div className="col col-lg-4 col-12 h-100">
                            <div class="card card2 ">
                                <div class="card-body">
                                    <h5 class="card-title cardTitle2">Where should we send your results?</h5>
                                    <p class="card-text cardText2">
                                        <div className="d-flex justify-content-center">
                                            
                                            <div className="">
                                                <EmailResults
                                                    answersChosen={props.answersChosen}
                                                    uniqueProductImages={uniqueProductImages}
                                                    SubAnswerChosen={props.SubAnswerChosen}
                                                />
                                            </div>
                                            {/* <div className="d-lg-none d-block">
                                                <EmailResults1
                                                    answersChosen={props.answersChosen}
                                                    uniqueProductImages={uniqueProductImages}
                                                    SubAnswerChosen={props.SubAnswerChosen}
                                                />
                                            </div> */}
                                        </div>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <hr className="card2line d-lg-none d-block"/>
                    </div>
                </div>
                
                {/* your custom kit title */}
                <div className="d-lg-block d-none mt-5">
                    <h3 className="d-flex justify-content-center"><b>Your Custom Kit</b></h3>
                </div>
                <div className="d-lg-block d-none fw-bold">
                    {productData?<i className="d-flex justify-content-center fw-bold fst-italic">({productData.length}) Products to meet your Business Needs</i>:null}
                </div>

                {/* *****custom kit for small devices***** */}
                <div className="d-lg-none d-block mt-5">
                    <h3 className="d-flex justify-content-center recommTitle"><b>Our recommendations for you</b></h3>
                </div>

                {/* section2 for large devices ----> */}
                
                {/* SDS Modal */}
                <SDSModal productData={modalProductdata ? modalProductdata : {}} />
                    <Head>
                        <meta name="ps-key" content="1766-5e9f1346be000c00243421b4" />
                        <meta name="ps-country" content="US" />
                        <meta name="ps-language" content="en" />
                        <script
                            src="https://cdn.pricespider.com/1/lib/ps-widget.js"
                            async
                        ></script>
                        <script
                            type="text/javascript"
                            src="https://cdn.pricespider.com/1/1766/ps-utid.js"
                            async
                        ></script>
                    </Head>
                    
                    <div className="scrollContainer mt-4">
                        <button className="buttonContainerLeft" id="slideLeft">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="black" className="bi bi-chevron-left" viewBox="0 0 16 16">
                                <path fillRule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
                            </svg>
                        </button>

                       
                            <div className="scrollItems" id="scrollItems">
                            {coreData.map((s, i) => (
                                <div key={i}>


                                    <div class="card productCards grow-on-hover mx-2">
                                        <div class="card-header prodCardHead d-lg-block d-none">
                                            <div className="productData ">
                                                {s.ProductName}
                                            </div>
                                        </div>
                                        <p class="card-text mt-2 mb-5 d-lg-none d-block">
                                            <div className="chips row ">
                                                {s.PrimaryArea.map((y, j) => (
                                                    // <div className="py-2 px-1" key={j}>
                                                        <span className=" mt-2 fw-bold ms-3 me-3 col col-lg-4  prod-recomm-area prod-primary-area">{y}</span>
                                                    // </div>d
                                                ))}
                                            </div>
                                        </p>
                                        <div class="card-body prodCardBody">
                                            <div className="d-flex flex-column align-items-center image-container">
                                                <div >
                                                    <a href={"#Product" + i} rel="noopener" data-action-detail={"#Product" + i} className="event_button_click">
                                                        <img
                                                            className="prodImage"
                                                            src={s.ImageUrl}
                                                            alt={s.ProductBrand + " " + s.ProductName}
                                                        />
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="card-header prodCardHead d-lg-none d-block">
                                                <div className="productData ">
                                                    {s.ProductName}
                                                </div>
                                            </div>
                                            <p class="card-text my-2 d-lg-block d-none">
                                                <div className="chips row ">
                                                    {s.PrimaryArea.map((y, j) => (
                                                        // <div className="py-2 px-1" key={j}>
                                                            <span className=" mt-2 fw-bold ms-2 col col-lg-4  prod-recomm-area prod-primary-area">{y}</span>
                                                        // </div>d
                                                    ))}
                                                </div>
                                            </p>

                                        </div>
                                    </div>
                                    
                                </div>
                            ))}

                        </div>
                 
                        
                        <button className="buttonContainerRight" id="slideRight">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="black" className="bi bi-chevron-right" viewBox="0 0 16 16">
                                <path fillRule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                            </svg>
                        </button>

                    </div>
                                    
                {/*  */}

                <div className="d-lg-none d-block mt-3">
                    <h2 className="d-flex justify-content-center recommTitle"><b>Your Custom Kit</b></h2>
                </div>

                {/* horizontal carousel stack of products */}
                <div className="d-lg-block d-none">
                <div className="scrollContainer  mt-4">
                    <button className="buttonContainerLeft me-4" id="slideLeft1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="black" className="bi bi-chevron-left" viewBox="0 0 16 16">
                            <path fillRule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
                        </svg>
                    </button>

                    {/* <div className="col col-sm-2"> */}
                    <div className="scrollItems " id="scrollItems1">
                            {coreData.map((x, i) => (
                                <ProductCards1
                                    x={x}
                                    i={i}
                                    key={i}
                                    setModalProductData={setModalProductData}
                                />
                            ))}
                    </div>
                
                    <button className="buttonContainerRight ms-4" id="slideRight1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="black" className="bi bi-chevron-right" viewBox="0 0 16 16">
                            <path fillRule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                        </svg>
                    </button>
                </div>
                </div>
                {/*  */}

                <div className="d-lg-none d-block">                                
                    {coreData.map((x, i) => (
                            <ProductCards1small
                                x={x}
                                i={i}
                                key={i}
                                setModalProductData={setModalProductData}
                            />
                        ))}
                </div>

                {/* Save your results */}
                <div>
                    <div className="text-center">
                        <h4 className="fw-bold mt-5">Save Your Results</h4>
                        <p className="fw-bold lowEmailText">Just enter your email and we’ll send you a copy of your results!</p>
                        <EmailResults1 className="ms-5"
                            answersChosen={props.answersChosen}
                            uniqueProductImages={uniqueProductImages}
                            SubAnswerChosen={props.SubAnswerChosen}
                        />
                    </div>
                </div>

                {/*  Claims */}
            
                <div className="claims">
                    <Claims />
                </div>
                
        </div>
        )
    }


const mapStateToProps = ({ nextPageReducer }) => ({
    productResult: nextPageReducer.productResult,
    answersChosen: nextPageReducer.answersChosen,
    subAnswerChosen: nextPageReducer.subAnswerChosen,
})
// export default Recommendations
const mapDispatchToProps = (dispatch) => {

  return {
    setModalFlag: () => dispatch(setModalFlag(false)),
    setProductResult,
    setAnswersChosen,
    setSubAnswerChosen
  }
}
export default connect( mapStateToProps,mapDispatchToProps)(Recommendations);